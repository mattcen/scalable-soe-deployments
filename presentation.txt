========================
Scalable SOE deployments
========================

Who am I?
=========

* Matthew Cengia <mattcen@gmail.com>, @mattcen on Twitter and
  elsewhere
* Systems Administrator at Cyber IT Solutions (http://www.cyber.com.au)
* Working on PrisonPC (http://www.prisonpc.com)

What is PrisonPC?
=================

A system designed to allow prisoners limited and monitored access PCs
and the Internet.

For the purposes of this presentation, the only importance of
PrisonPC is that it makes use of a system we call Trimclient.

What is Trimclient?
===================

A solution to create network-bootable OSes which run all apps on the
local machine to reduce server load.

Trimclient history
==================

* Knoppix live boot CD
  * live environment
  * read-only root fileststem
  * union with COW
* SafeIC (safe internet computer)
* TCA and Transmuste
* TCA and bootstrap

Trimclient use-cases
====================

* Any large-ish desktop deployment:
  * Prisons
  * Schools
  * Offices

How does network booting work?
==============================

#. Desktop starts booting
#. BIOS tries to boot off network card's PXE (Pre-installation
   Execution Environment) ROM
#. PXE ROM requests DHCP
#. DHCP server sends IP, netmask, TFTP server, and TFTP boot file path
   (pxelinux.0, in our case)
#. PXE ROM retrieves and runs boot file
#. pxelinux.0 attempts to retrieve boot config file based on this
   desktop's MAC address, followed by individual nibbles (4 bits, or
   1 hex digit) of its IP address, starting with the whole IP, then
   repeatedly stripping nibbles off the end::

     pxelinux.cfg/00020003-0004-0005-0006-0007-0008-0009
     pxelinux.cfg/01-88-99-aa-bb-cc-dd
     pxelinux.cfg/C000025B
     pxelinux.cfg/C000025
     pxelinux.cfg/C00002
     pxelinux.cfg/C0000
     pxelinux.cfg/C000
     pxelinux.cfg/C00
     pxelinux.cfg/C0
     pxelinux.cfg/C
     pxelinux.cfg/default

#. pxelinux.0 uses retrieved config file to possibly display a menu and
   ultimately retrieve a kernel and initial RAM disk via TFTP, which it
   then loads
#. Kernel loads initrd, which then takes over and hands off to
   live-boot

Building SOEs
=============

Old method: Transmute
---------------------

* Nasty scheme shell scripts
* Used Ubuntu 10.04 Live Desktop ISO
* Uninstalled basically everything
* Installed just what we wanted and performed scripted configuration
* Booted via Casper (Ubuntu's live boot solution)

New method: Bootstrap
---------------------

* Relatively short Bash script
* Performs base installation via debootstrap
* Installs other required packages and performs scripted configuration
* Boots via live-boot (Debian's live boot solution)

What does live-boot do?
=======================

(in a nutshell)

* Find and mount root filesystem, in our case exposed as a squashfs or
  standard directory over NFS
* Set up a COW (copy-on-write) filesystem on top so temporary changes
  can be made. Currently uses AUFS
* Pivot root and start /sbin/init from new root
* Other stuff (out of scope)

Trimclient Admin (TCA)
======================

* In-house set of scripts
* Keeps 3 tables:
  * Images (SOEs): A list of SOEs available for booting

  * Realms: A group of PCs. E.g: "classroom 1", "cells", and the SOE
    each group should boot

  * Hosts: Individual desktop PCs, with its MAC, IP/netmask, and realm

* Allows for trivial grouping of hosts in realms and immediate re-assignment of
  realms to new SOEs. Upgrades then only require a reboot of each
  desktop, and can be tested thoroughly beforehand.

..  This comment provides hints for editors about what kind of file
    this is, and conventions to adhere to when editing it.  The page break
    (^L) above helps Emacs quickly locate this metadata.

    The Emacs major mode is set twice so that if rst.el (a non-standard
    library) isn't installed, Emacs will fall back on text mode instead
    of fundamental mode.

    Local Variables:
    mode: text
    mode: rst
    coding: utf-8
    indent-tabs-mode: nil
    fill-column: 70
    tab-width: 2
    End:

    vim: ft=rst fenc=utf-8 sts=2 sw=2 ts=2 tw=70 et :
